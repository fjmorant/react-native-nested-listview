// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NestedListView renders empty data 1`] = `
<RCTScrollView
  data={
    Array [
      Object {
        "_internalId": "138",
      },
      Object {
        "_internalId": "139",
      },
      Object {
        "_internalId": "140",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  numColumns={1}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <View>
          <Text />
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <View>
          <Text />
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <View>
          <Text />
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`NestedListView renders with NestedRow 1`] = `
<RCTScrollView
  data={
    Array [
      Object {
        "_internalId": "112",
        "opened": false,
        "title": "child1",
      },
      Object {
        "_internalId": "113",
        "opened": false,
        "title": "child2",
      },
      Object {
        "_internalId": "114",
        "opened": false,
        "title": "child3",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  numColumns={1}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <View
          style={
            Array [
              Object {
                "flex": 1,
                "justifyContent": "center",
              },
              Object {
                "paddingLeft": 10,
              },
              Object {},
            ]
          }
        />
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <View
          style={
            Array [
              Object {
                "flex": 1,
                "justifyContent": "center",
              },
              Object {
                "paddingLeft": 10,
              },
              Object {},
            ]
          }
        />
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <View
          style={
            Array [
              Object {
                "flex": 1,
                "justifyContent": "center",
              },
              Object {
                "paddingLeft": 10,
              },
              Object {},
            ]
          }
        />
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`NestedListView renders with children as objects 1`] = `
<RCTScrollView
  data={
    Array [
      Object {
        "_internalId": "80",
        "children": Array [
          Object {
            "_internalId": "76",
            "children": Array [
              Object {
                "_internalId": "73",
                "children": Array [],
                "name": "Sub Child 1",
                "opened": false,
              },
              Object {
                "_internalId": "75",
                "children": Array [
                  Object {
                    "_internalId": "74",
                    "children": Array [],
                    "name": "Sample",
                    "opened": false,
                  },
                ],
                "name": "Sub Child 2",
                "opened": false,
              },
            ],
            "name": "Main Child 1",
            "opened": false,
          },
          Object {
            "_internalId": "79",
            "children": Array [
              Object {
                "_internalId": "77",
                "children": Array [],
                "name": "Sub Child 1",
                "opened": false,
              },
              Object {
                "_internalId": "78",
                "children": Array [],
                "name": "Sub Child 2",
                "opened": false,
              },
            ],
            "name": "Main Child 2",
            "opened": false,
          },
        ],
        "name": "Main Parent",
        "opened": false,
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  numColumns={1}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <View>
          <Text>
            Main Parent
          </Text>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`NestedListView renders with nested arrays 1`] = `
<RCTScrollView
  data={
    Array [
      Object {
        "_internalId": "29",
        "items": Array [
          Object {
            "_internalId": "27",
            "name": "subchild 1.1",
            "opened": false,
          },
          Object {
            "_internalId": "28",
            "name": "subchild 1.2",
            "opened": false,
          },
        ],
        "opened": false,
        "title": "child1",
      },
      Object {
        "_internalId": "31",
        "items": Array [
          Object {
            "_internalId": "30",
            "key": "subchild 2.1",
            "opened": false,
          },
        ],
        "opened": false,
        "title": "child2",
      },
      Object {
        "_internalId": "32",
        "opened": false,
        "title": "child3",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  numColumns={1}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <View>
          <Text />
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <View>
          <Text />
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <View>
          <Text />
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`NestedListView renders with nested arrays and children with different name 1`] = `
<RCTScrollView
  data={
    Array [
      Object {
        "_internalId": "36",
        "items": Array [
          Object {
            "_internalId": "34",
            "name": "subchild 1.1",
            "opened": false,
          },
          Object {
            "_internalId": "35",
            "name": "subchild 1.2",
            "opened": false,
          },
        ],
        "opened": false,
        "title": "child1",
      },
      Object {
        "_internalId": "38",
        "descendants": Array [
          Object {
            "_internalId": "37",
            "key": "subchild 2.1",
            "opened": false,
          },
        ],
        "opened": false,
        "title": "child2",
      },
      Object {
        "_internalId": "39",
        "opened": false,
        "title": "child3",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  numColumns={1}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <View>
          <Text />
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <View>
          <Text />
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <View>
          <Text />
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`NestedListView renders with nested arrays and children with different that does not exists 1`] = `
<RCTScrollView
  data={
    Array [
      Object {
        "_internalId": "69",
        "items": Array [
          Object {
            "_internalId": "67",
            "name": "subchild 1.1",
            "opened": false,
          },
          Object {
            "_internalId": "68",
            "name": "subchild 1.2",
            "opened": false,
          },
        ],
        "opened": false,
        "title": "child1",
      },
      Object {
        "_internalId": "70",
        "descendants": Array [
          Object {
            "key": "subchild 2.1",
          },
        ],
        "opened": false,
        "title": "child2",
      },
      Object {
        "_internalId": "71",
        "opened": false,
        "title": "child3",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  numColumns={1}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <View>
          <Text />
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <View>
          <Text />
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <View>
          <Text />
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`NestedListView renders with onNodePressed 1`] = `
<RCTScrollView
  data={
    Array [
      Object {
        "_internalId": "108",
        "opened": false,
        "title": "child1",
      },
      Object {
        "_internalId": "109",
        "opened": false,
        "title": "child2",
      },
      Object {
        "_internalId": "110",
        "opened": false,
        "title": "child3",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  numColumns={1}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <View>
          <Text />
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <View>
          <Text />
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <View>
          <Text />
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`NestedListView renders with simple array 1`] = `
<RCTScrollView
  data={
    Array [
      Object {
        "_internalId": "1",
        "opened": false,
        "title": "child1",
      },
      Object {
        "_internalId": "2",
        "opened": false,
        "title": "child2",
      },
      Object {
        "_internalId": "3",
        "opened": false,
        "title": "child3",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  numColumns={1}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <View>
          <Text />
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <View>
          <Text />
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <View>
          <Text />
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`NestedListView renders without data 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "rgb(237, 57, 40)",
      "borderColor": "rgb(84, 85, 86)",
      "borderWidth": 1,
      "height": 60,
      "justifyContent": "center",
    }
  }
>
  <Text
    style={
      Object {
        "color": "rgb(255, 255, 255)",
        "fontSize": 17,
        "fontWeight": "bold",
      }
    }
  >
    prop 
    data
     has not been passed
  </Text>
</View>
`;

exports[`NestedListView renders without renderNode 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "rgb(237, 57, 40)",
      "borderColor": "rgb(84, 85, 86)",
      "borderWidth": 1,
      "height": 60,
      "justifyContent": "center",
    }
  }
>
  <Text
    style={
      Object {
        "color": "rgb(255, 255, 255)",
        "fontSize": 17,
        "fontWeight": "bold",
      }
    }
  >
    prop 
    renderNode
     has not been passed
  </Text>
</View>
`;
